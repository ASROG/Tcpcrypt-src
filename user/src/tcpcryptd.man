.TH "tcpcryptd" "8" "" "" ""
.SH NAME
.PP
\f[B]tcpcryptd\f[] \- Implement the tcpcrypt protocol by transparently
modifying network I/O
.SH SYNOPSIS
.PP
\f[B]tcpcryptd\f[] [\f[I]options\f[]]
.SH OPTIONS
.PP
A list of all options is produced by:
.RS
.PP
\f[B]tcpcryptd \-h\f[]
.RE
.SH DESCRIPTION
.PP
The \f[B]tcpcryptd\f[] daemon transforms TCP segments received from a
kernel "divert" port (configurable with \f[B]\-p\f[] \f[I]port\f[]) in
order to implement "opportunistic encryption" via the \f[I]tcpcrypt\f[]
protocol: for peers that support the protocol (signalled by a TCP option
in the SYN packet), ephemeral keys are exchanged and used to encrypt and
protect the integrity of connection data.
(The protocol provides integrity for parts of the TCP header as well.)
When a peer does not signal support for \f[I]tcpcrypt\f[] in the
connection handshake, the daemon will pass the remainder of the
connection unperturbed (and thus unprotected).
.PP
Application software need not be modified to take advantage of this
facility, which provides confidentiality in the face of passive network
attackers (those who cannot modify network data in transit).
But in order to protect communications from active attackers,
connections must be authenticated as described below.
.PP
Configuration of packet diversion rules allows the system administrator
to control which TCP connections are protected by \f[B]tcpcryptd\f[].
.SS Authentication
.PP
The \f[I]tcpcrypt\f[] protocol does not itself protect communications
against "active attackers", that is, those who are able to modify
network packets in transit.
Such an attacker may perform a "man in the middle" (MITM) attack that
allows her to behave as the endpoint of the encrypted connection and
thus compromise its intended confidentiality.
.PP
However, applications aware of \f[I]tcpcrypt\f[] may authenticate the
connection in whatever manner they choose, aided by an identifier for
the connection that is derived from the protocol and made available by
\f[B]tcpcryptd\f[]:
.PP
A \f[I]session id\f[] is derived from the ephemeral keys used to encrypt
each connection protected by \f[I]tcpcrypt\f[].
This identifier is (probabalistically) unique over all connections, is
not secret, and may be extracted by applications via a user library.
Session ids for all active connections may also be listed with the
netstat\-like utility \f[B]tcnetstat\f[](8).
.PP
Applications may use the \f[I]tcpcrypt\f[] session id to authenticate
the connection in arbitrary ways.
For example, they may bind it together with a shared secret such as a
password, sign it with a public key, use a voice connection to speak a
fingerprint of it, or simply record it for later confirmation.
.SH SEE ALSO
.PP
\f[B]tcnetstat\f[](8), <http://tcpcrypt.org/>
